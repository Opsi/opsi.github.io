---
import GithubLogo from "../assets/github-svgrepo-com.svg";
import LinkedinLogo from "../assets/linkedin-svgrepo-com.svg";
import waveBG from "../assets/wave-bottom.svg";
---

<section
  class="relative h-screen w-screen bg-deepest flex flex-col items-start justify-center p-4"
>
  <div class="absolute inset-0">
    <img src={waveBG.src} class="object-cover object-bottom w-full h-full" />
  </div>
  <div class="z-10 max-w-3xl mx-auto space-y-8">
    <div class="flex flex-col items-start gap-2">
      <div class="flex items-center gap-2">
        <code
          id="typewriter"
          class="text-2xl text-left h-6 flex text-primary font-semibold items-center"
        >
        </code>
        <span id="cursor" class="inline-block w-1.5 h-6 animate-pulse bg-ink"
        ></span>
      </div>
      <h1 class="text-6xl font-extrabold">
        <span class="text-primary">R</span>obin Wiersig
      </h1>
      <p class="text-3xl text-whisper font-medium">
        Fullstack Developer based in Berlin. I love to make things more
        efficient one bug at a time
      </p>
    </div>
    <div class="flex items-center justify-start gap-4">
      <a href="https://github.com/opsi">
        <GithubLogo
          class="size-10 fill-whisper hover:fill-primary hover:scale-120 transition duration-150 ease-in-out"
        />
      </a>
      <a href="https://www.linkedin.com/in/robin-wiersig-396527195">
        <LinkedinLogo
          class="size-12 fill-whisper hover:fill-primary hover:scale-120 transition duration-150 ease-in-out"
        />
      </a>
    </div>
  </div>
</section>

<script>
  // TODO: Extract this logic into a component
  const START_BACKSPACE_DELAY = 1000;
  const TYPE_DELAY = 50;
  const NEXT_TEXT_DELAY = 1000;

  const texts = [
    "FULLSTACK DEVELOPER",
    "TYPESCRIPT ENJOYER",
    "LINUX ENTHUSIAST",
  ];
  const typewriter = document.getElementById("typewriter");
  let textIndex = 0;
  let charIndex = 0;
  let isBackspacing = false;
  function typeWrite() {
    if (!typewriter) return;
    if (isBackspacing && charIndex <= 1) {
      // rotate to the next text
      typewriter.innerHTML = "";
      isBackspacing = false;
      textIndex = (textIndex + 1) % texts.length;
      charIndex = 0;
      setTimeout(typeWrite, NEXT_TEXT_DELAY);
      return;
    }
    if (isBackspacing) {
      // just remove the last character
      charIndex--;
      typewriter.innerHTML = texts[textIndex].substring(0, charIndex);
      setTimeout(typeWrite, TYPE_DELAY);
      return;
    }
    const text = texts[textIndex];
    if (charIndex < text.length - 1) {
      // just add one character
      typewriter.innerHTML += text.charAt(charIndex);
      charIndex++;
      setTimeout(typeWrite, TYPE_DELAY);
      return;
    }
    if (charIndex === text.length - 1) {
      // add one character and start backspacing
      typewriter.innerHTML += text.charAt(charIndex);
      isBackspacing = true;
      setTimeout(typeWrite, START_BACKSPACE_DELAY);
      return;
    }
  }
  typeWrite();
</script>
