---
interface Props {
  startBackspaceDelayMs?: number;
  typeDelayMs?: number;
  nextTextDelayMs?: number;
  texts: string[];
}
const {
  startBackspaceDelayMs = 1000,
  typeDelayMs = 50,
  nextTextDelayMs = 1000,
  texts,
} = Astro.props;
---

<div class="flex items-center gap-2 h-4 sm:h-6">
  <code
    id="typewriter"
    class="text-xl sm:text-3xl text-left flex text-primary font-semibold items-center"
  ></code>
  <span id="cursor" class="inline-block w-1 h-full animate-pulse bg-ink"></span>
</div>

<script>
  // TODO: Make it dynamic via props
  const START_BACKSPACE_DELAY = 1000;
  const TYPE_DELAY = 50;
  const NEXT_TEXT_DELAY = 1000;

  const texts = ["STUFF I MADE", "CONTACT ME", "LEARN MORE"];
  const typewriter = document.getElementById("typewriter");
  let textIndex = 0;
  let charIndex = 0;
  let isBackspacing = false;
  function typeWrite() {
    if (!typewriter) return;
    if (isBackspacing && charIndex <= 1) {
      // rotate to the next text
      typewriter.innerHTML = "";
      isBackspacing = false;
      textIndex = (textIndex + 1) % texts.length;
      charIndex = 0;
      setTimeout(typeWrite, NEXT_TEXT_DELAY);
      return;
    }
    if (isBackspacing) {
      // just remove the last character
      charIndex--;
      typewriter.innerHTML = texts[textIndex].substring(0, charIndex);
      setTimeout(typeWrite, TYPE_DELAY);
      return;
    }
    const text = texts[textIndex];
    if (charIndex < text.length - 1) {
      // just add one character
      typewriter.innerHTML += text.charAt(charIndex);
      charIndex++;
      setTimeout(typeWrite, TYPE_DELAY);
      return;
    }
    if (charIndex === text.length - 1) {
      // add one character and start backspacing
      typewriter.innerHTML += text.charAt(charIndex);
      isBackspacing = true;
      setTimeout(typeWrite, START_BACKSPACE_DELAY);
      return;
    }
  }
  typeWrite();
</script>
